version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: esg-postgres
    environment:
      POSTGRES_DB: esg_survey_db
      POSTGRES_USER: esg_user
      POSTGRES_PASSWORD: esg_password123
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/init-db:/docker-entrypoint-initdb.d
    networks:
      - esg-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U esg_user -d esg_survey_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  # pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: esg-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@esg.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8081:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - esg-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

  # Next.js Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: esg-app
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://esg_user:esg_password123@postgres:5432/esg_survey_db?schema=public
      - NEXTAUTH_URL=http://localhost:3001
      - NEXTAUTH_SECRET=your-super-secret-key-change-in-production-environment
    ports:
      - "3001:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
      - ./prisma:/app/prisma
    networks:
      - esg-network
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  esg-network:
    driver: bridge